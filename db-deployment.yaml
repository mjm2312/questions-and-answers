apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --volumes hostPath
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --volumes hostPath
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        - name: POSTGRES_USER
          value: postgres
        image: mjm2312/db-0419-2
        imagePullPolicy: ""
        name: db
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
          #test
          #minikube mounts
          #- mountPath: /var/lib/postgresql/data/pgdata
          #  subPath: db/test-0304-schema
          #  name: postgres-pv-claim-medium
          #- mountPath: /docker-entrypoint-initdb.d
          #  subPath: db/test-0304
          #  subPath: 20-create_db.sh this creates a directory with this name in minikube
          #  name: postgres-pv-claim-medium
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      #test
      - name: postgres-pv-claim-medium
        persistentVolumeClaim: 
          claimName: postgres-pv-claim-medium
      #minikube mountpoint
      #- hostPath:
      #    path: /data/db
      #    name: db-hostpath
status: {}
